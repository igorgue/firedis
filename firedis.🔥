from python.python import Python
from python.object import PythonObject
from runtime.llcl import num_cores, Runtime


fn handle_msg(client_socket: PythonObject, msg: PythonObject) -> None:
    let pong = "+PONG\r\n"
    print("> received:", msg)

    try:
        if msg == "PING\r\n":
            _ = client_socket.send(PythonObject(pong).encode())
    except e:
        print("> err:", e.value)


fn wait_forever(client_socket: PythonObject) -> None:
    while True:
        try:
            let data = client_socket.recv(1024)

            _ = handle_msg(client_socket, data)

        except e:
            print("> err:", e.value, "exiting...")


fn main():
    let host: StringRef = "localhost"
    let port: Int = 6379
    let reuse_port: Bool = True

    let socket: PythonObject
    let server_socket: PythonObject

    print("> starting firedis on host:", host, "and port", port, "ðŸ”¥")

    try:
        Python.add_to_path(".")
        let firedis_py = Python.import_module("firedis")

        server_socket = firedis_py.create_server(host, port, reuse_port)

        let socket_res = server_socket.accept()

        let client_socket = socket_res[0]
        let addr = socket_res[1]

        print("> client connected:", addr)

        wait_forever(client_socket)

    except e:
        print("> err:", e.value, "exiting...")
